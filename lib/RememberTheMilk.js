// Cafe Au Lait
// A node.js Remember The Milk library

// (C)2013 Michael Walker (michael@lazerwalker.com)
// Licensed under the MIT License

// The most recent copy of this code, as well as license information
// can be found at http://github.com/lazerwalker/CafeAuLait
//
// Generated by CoffeeScript 1.3.3
(function() {
  var RememberTheMilk, md5, querystring, request,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  md5 = require('md5');

  request = require('request');

  querystring = require('querystring');

  module.exports = RememberTheMilk = (function() {

    RememberTheMilk.prototype.authUrl = "http://api.rememberthemilk.com/services/auth/?";

    RememberTheMilk.prototype.restUrl = "http://api.rememberthemilk.com/services/rest/?";

    function RememberTheMilk(apiKey, sharedSecret, token) {
      this.apiKey = apiKey;
      this.sharedSecret = sharedSecret;
      this.token = token;
      this.getAuthUrl = __bind(this.getAuthUrl, this);

    }

    RememberTheMilk.prototype.getAuthUrl = function(callback, opts) {
      var perms,
        _this = this;
      if (opts == null) {
        opts = {};
      }
      perms = opts[perms] || "delete";
      return this.getFrob(function(frob) {
        var params;
        params = _this._signRequest({
          perms: perms,
          frob: frob
        });
        return typeof callback === "function" ? callback("" + _this.authUrl + (querystring.stringify(params))) : void 0;
      });
    };

    RememberTheMilk.prototype.getFrob = function(callback) {
      var params,
        _this = this;
      if (this.frob != null) {
        if (typeof callback === "function") {
          callback(this.frob);
        }
        return;
      }
      params = this._signRequest({
        method: "rtm.auth.getFrob"
      });
      return request.get("" + this.restUrl + (querystring.stringify(params)), function(err, response, body) {
        var frob;
        frob = JSON.parse(body).rsp.frob;
        if (err || !frob) {
          return typeof callback === "function" ? callback(void 0, err) : void 0;
        } else {
          _this.frob = frob;
          return typeof callback === "function" ? callback(frob) : void 0;
        }
      });
    };

    RememberTheMilk.prototype.getAuthToken = function(callback) {
      var _this = this;
      return this.getFrob(function(frob, error) {
        var params;
        if (error) {
          callback(void 0, error);
          return;
        }
        params = _this._signRequest({
          method: "rtm.auth.getToken",
          frob: frob
        });
        return request.get("" + _this.restUrl + (querystring.stringify(params)), function(err, response, body) {
          var token;
          token = JSON.parse(body).rsp.auth.token;
          if (err || !(token != null)) {
            return typeof callback === "function" ? callback(void 0, err) : void 0;
          } else {
            _this.token = token;
            return typeof callback === "function" ? callback(token) : void 0;
          }
        });
      });
    };

    RememberTheMilk.prototype.get = function(method, params, callback) {
      var _this = this;
      if (typeof params === 'function') {
        callback = params;
        params = {};
      }
      params["method"] = method;
      params = this._signRequest(params);
      return request.get("" + this.restUrl + (querystring.stringify(params)), function(err, response, body) {
        var rtmResponse;
        rtmResponse = JSON.parse(body).rsp;
        if (err || !(rtmResponse != null)) {
          return typeof callback === "function" ? callback(void 0, err) : void 0;
        } else {
          return typeof callback === "function" ? callback(rtmResponse) : void 0;
        }
      });
    };

    RememberTheMilk.prototype._apiSig = function(params) {
      var keys, string,
        _this = this;
      keys = Object.keys(params).sort();
      string = keys.reduce(function(string, key) {
        return "" + string + key + params[key];
      }, '');
      string = "" + this.sharedSecret + string;
      return md5.digest_s(string);
    };

    RememberTheMilk.prototype._signRequest = function(params) {
      if (params == null) {
        params = {};
      }
      params["api_key"] = this.apiKey;
      params["format"] = 'json';
      if (this.token != null) {
        params["auth_token"] = this.token;
      }
      params["api_sig"] = this._apiSig(params);
      return params;
    };

    return RememberTheMilk;

  })();

}).call(this);
